type AggregateDesign {
  count: Int!
}

type AggregateLoad {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type Design {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  modified: Boolean!
  author: User!
  deanery: String!
  location: String!
  parish: String!
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  loads(where: LoadWhereInput, orderBy: LoadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Load!]
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float!
  param_crit: Boolean!
  param_loadPercent: Float!
  param_condEff: Float!
  param_maxDoD: Float!
  param_maxPowerMarkdown: Float!
  param_solarEff: Float!
  param_surgeMarkup: Float!
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

type DesignConnection {
  pageInfo: PageInfo!
  edges: [DesignEdge]!
  aggregate: AggregateDesign!
}

input DesignCreateInput {
  id: ID
  modified: Boolean
  author: UserCreateOneWithoutDesignsInput!
  deanery: String!
  location: String!
  parish: String!
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  loads: LoadCreateManyWithoutDesignInput
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignCreateManyWithoutAuthorInput {
  create: [DesignCreateWithoutAuthorInput!]
  connect: [DesignWhereUniqueInput!]
}

input DesignCreateOneWithoutLoadsInput {
  create: DesignCreateWithoutLoadsInput
  connect: DesignWhereUniqueInput
}

input DesignCreateWithoutAuthorInput {
  id: ID
  modified: Boolean
  deanery: String!
  location: String!
  parish: String!
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  loads: LoadCreateManyWithoutDesignInput
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignCreateWithoutLoadsInput {
  id: ID
  modified: Boolean
  author: UserCreateOneWithoutDesignsInput!
  deanery: String!
  location: String!
  parish: String!
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

type DesignEdge {
  node: Design!
  cursor: String!
}

enum DesignOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  modified_ASC
  modified_DESC
  deanery_ASC
  deanery_DESC
  location_ASC
  location_DESC
  parish_ASC
  parish_DESC
  longitude_ASC
  longitude_DESC
  longitudeDir_ASC
  longitudeDir_DESC
  latitude_ASC
  latitude_DESC
  latitudeDir_ASC
  latitudeDir_DESC
  gridTied_ASC
  gridTied_DESC
  generator_ASC
  generator_DESC
  voltage_ASC
  voltage_DESC
  freq_ASC
  freq_DESC
  phase_ASC
  phase_DESC
  area_roof_ASC
  area_roof_DESC
  area_ground_ASC
  area_ground_DESC
  dayLoad_ASC
  dayLoad_DESC
  nightLoad_ASC
  nightLoad_DESC
  fullLoad_ASC
  fullLoad_DESC
  param_autoHours_ASC
  param_autoHours_DESC
  param_crit_ASC
  param_crit_DESC
  param_loadPercent_ASC
  param_loadPercent_DESC
  param_condEff_ASC
  param_condEff_DESC
  param_maxDoD_ASC
  param_maxDoD_DESC
  param_maxPowerMarkdown_ASC
  param_maxPowerMarkdown_DESC
  param_solarEff_ASC
  param_solarEff_DESC
  param_surgeMarkup_ASC
  param_surgeMarkup_DESC
  battery_ASC
  battery_DESC
  charger_ASC
  charger_DESC
  inverter_ASC
  inverter_DESC
  cost_ASC
  cost_DESC
  output_pv_ASC
  output_pv_DESC
}

type DesignPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  modified: Boolean!
  deanery: String!
  location: String!
  parish: String!
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float!
  param_crit: Boolean!
  param_loadPercent: Float!
  param_condEff: Float!
  param_maxDoD: Float!
  param_maxPowerMarkdown: Float!
  param_solarEff: Float!
  param_surgeMarkup: Float!
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  modified: Boolean
  modified_not: Boolean
  deanery: String
  deanery_not: String
  deanery_in: [String!]
  deanery_not_in: [String!]
  deanery_lt: String
  deanery_lte: String
  deanery_gt: String
  deanery_gte: String
  deanery_contains: String
  deanery_not_contains: String
  deanery_starts_with: String
  deanery_not_starts_with: String
  deanery_ends_with: String
  deanery_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  parish: String
  parish_not: String
  parish_in: [String!]
  parish_not_in: [String!]
  parish_lt: String
  parish_lte: String
  parish_gt: String
  parish_gte: String
  parish_contains: String
  parish_not_contains: String
  parish_starts_with: String
  parish_not_starts_with: String
  parish_ends_with: String
  parish_not_ends_with: String
  longitude: Float
  longitude_not: Float
  longitude_in: [Float!]
  longitude_not_in: [Float!]
  longitude_lt: Float
  longitude_lte: Float
  longitude_gt: Float
  longitude_gte: Float
  longitudeDir: String
  longitudeDir_not: String
  longitudeDir_in: [String!]
  longitudeDir_not_in: [String!]
  longitudeDir_lt: String
  longitudeDir_lte: String
  longitudeDir_gt: String
  longitudeDir_gte: String
  longitudeDir_contains: String
  longitudeDir_not_contains: String
  longitudeDir_starts_with: String
  longitudeDir_not_starts_with: String
  longitudeDir_ends_with: String
  longitudeDir_not_ends_with: String
  latitude: Float
  latitude_not: Float
  latitude_in: [Float!]
  latitude_not_in: [Float!]
  latitude_lt: Float
  latitude_lte: Float
  latitude_gt: Float
  latitude_gte: Float
  latitudeDir: String
  latitudeDir_not: String
  latitudeDir_in: [String!]
  latitudeDir_not_in: [String!]
  latitudeDir_lt: String
  latitudeDir_lte: String
  latitudeDir_gt: String
  latitudeDir_gte: String
  latitudeDir_contains: String
  latitudeDir_not_contains: String
  latitudeDir_starts_with: String
  latitudeDir_not_starts_with: String
  latitudeDir_ends_with: String
  latitudeDir_not_ends_with: String
  gridTied: String
  gridTied_not: String
  gridTied_in: [String!]
  gridTied_not_in: [String!]
  gridTied_lt: String
  gridTied_lte: String
  gridTied_gt: String
  gridTied_gte: String
  gridTied_contains: String
  gridTied_not_contains: String
  gridTied_starts_with: String
  gridTied_not_starts_with: String
  gridTied_ends_with: String
  gridTied_not_ends_with: String
  generator: String
  generator_not: String
  generator_in: [String!]
  generator_not_in: [String!]
  generator_lt: String
  generator_lte: String
  generator_gt: String
  generator_gte: String
  generator_contains: String
  generator_not_contains: String
  generator_starts_with: String
  generator_not_starts_with: String
  generator_ends_with: String
  generator_not_ends_with: String
  voltage: String
  voltage_not: String
  voltage_in: [String!]
  voltage_not_in: [String!]
  voltage_lt: String
  voltage_lte: String
  voltage_gt: String
  voltage_gte: String
  voltage_contains: String
  voltage_not_contains: String
  voltage_starts_with: String
  voltage_not_starts_with: String
  voltage_ends_with: String
  voltage_not_ends_with: String
  freq: String
  freq_not: String
  freq_in: [String!]
  freq_not_in: [String!]
  freq_lt: String
  freq_lte: String
  freq_gt: String
  freq_gte: String
  freq_contains: String
  freq_not_contains: String
  freq_starts_with: String
  freq_not_starts_with: String
  freq_ends_with: String
  freq_not_ends_with: String
  phase: String
  phase_not: String
  phase_in: [String!]
  phase_not_in: [String!]
  phase_lt: String
  phase_lte: String
  phase_gt: String
  phase_gte: String
  phase_contains: String
  phase_not_contains: String
  phase_starts_with: String
  phase_not_starts_with: String
  phase_ends_with: String
  phase_not_ends_with: String
  area_roof: Int
  area_roof_not: Int
  area_roof_in: [Int!]
  area_roof_not_in: [Int!]
  area_roof_lt: Int
  area_roof_lte: Int
  area_roof_gt: Int
  area_roof_gte: Int
  area_ground: Int
  area_ground_not: Int
  area_ground_in: [Int!]
  area_ground_not_in: [Int!]
  area_ground_lt: Int
  area_ground_lte: Int
  area_ground_gt: Int
  area_ground_gte: Int
  dayLoad: Float
  dayLoad_not: Float
  dayLoad_in: [Float!]
  dayLoad_not_in: [Float!]
  dayLoad_lt: Float
  dayLoad_lte: Float
  dayLoad_gt: Float
  dayLoad_gte: Float
  nightLoad: Float
  nightLoad_not: Float
  nightLoad_in: [Float!]
  nightLoad_not_in: [Float!]
  nightLoad_lt: Float
  nightLoad_lte: Float
  nightLoad_gt: Float
  nightLoad_gte: Float
  fullLoad: Float
  fullLoad_not: Float
  fullLoad_in: [Float!]
  fullLoad_not_in: [Float!]
  fullLoad_lt: Float
  fullLoad_lte: Float
  fullLoad_gt: Float
  fullLoad_gte: Float
  param_autoHours: Float
  param_autoHours_not: Float
  param_autoHours_in: [Float!]
  param_autoHours_not_in: [Float!]
  param_autoHours_lt: Float
  param_autoHours_lte: Float
  param_autoHours_gt: Float
  param_autoHours_gte: Float
  param_crit: Boolean
  param_crit_not: Boolean
  param_loadPercent: Float
  param_loadPercent_not: Float
  param_loadPercent_in: [Float!]
  param_loadPercent_not_in: [Float!]
  param_loadPercent_lt: Float
  param_loadPercent_lte: Float
  param_loadPercent_gt: Float
  param_loadPercent_gte: Float
  param_condEff: Float
  param_condEff_not: Float
  param_condEff_in: [Float!]
  param_condEff_not_in: [Float!]
  param_condEff_lt: Float
  param_condEff_lte: Float
  param_condEff_gt: Float
  param_condEff_gte: Float
  param_maxDoD: Float
  param_maxDoD_not: Float
  param_maxDoD_in: [Float!]
  param_maxDoD_not_in: [Float!]
  param_maxDoD_lt: Float
  param_maxDoD_lte: Float
  param_maxDoD_gt: Float
  param_maxDoD_gte: Float
  param_maxPowerMarkdown: Float
  param_maxPowerMarkdown_not: Float
  param_maxPowerMarkdown_in: [Float!]
  param_maxPowerMarkdown_not_in: [Float!]
  param_maxPowerMarkdown_lt: Float
  param_maxPowerMarkdown_lte: Float
  param_maxPowerMarkdown_gt: Float
  param_maxPowerMarkdown_gte: Float
  param_solarEff: Float
  param_solarEff_not: Float
  param_solarEff_in: [Float!]
  param_solarEff_not_in: [Float!]
  param_solarEff_lt: Float
  param_solarEff_lte: Float
  param_solarEff_gt: Float
  param_solarEff_gte: Float
  param_surgeMarkup: Float
  param_surgeMarkup_not: Float
  param_surgeMarkup_in: [Float!]
  param_surgeMarkup_not_in: [Float!]
  param_surgeMarkup_lt: Float
  param_surgeMarkup_lte: Float
  param_surgeMarkup_gt: Float
  param_surgeMarkup_gte: Float
  battery: String
  battery_not: String
  battery_in: [String!]
  battery_not_in: [String!]
  battery_lt: String
  battery_lte: String
  battery_gt: String
  battery_gte: String
  battery_contains: String
  battery_not_contains: String
  battery_starts_with: String
  battery_not_starts_with: String
  battery_ends_with: String
  battery_not_ends_with: String
  charger: String
  charger_not: String
  charger_in: [String!]
  charger_not_in: [String!]
  charger_lt: String
  charger_lte: String
  charger_gt: String
  charger_gte: String
  charger_contains: String
  charger_not_contains: String
  charger_starts_with: String
  charger_not_starts_with: String
  charger_ends_with: String
  charger_not_ends_with: String
  inverter: String
  inverter_not: String
  inverter_in: [String!]
  inverter_not_in: [String!]
  inverter_lt: String
  inverter_lte: String
  inverter_gt: String
  inverter_gte: String
  inverter_contains: String
  inverter_not_contains: String
  inverter_starts_with: String
  inverter_not_starts_with: String
  inverter_ends_with: String
  inverter_not_ends_with: String
  cost: Int
  cost_not: Int
  cost_in: [Int!]
  cost_not_in: [Int!]
  cost_lt: Int
  cost_lte: Int
  cost_gt: Int
  cost_gte: Int
  output_pv: Float
  output_pv_not: Float
  output_pv_in: [Float!]
  output_pv_not_in: [Float!]
  output_pv_lt: Float
  output_pv_lte: Float
  output_pv_gt: Float
  output_pv_gte: Float
  AND: [DesignScalarWhereInput!]
  OR: [DesignScalarWhereInput!]
  NOT: [DesignScalarWhereInput!]
}

type DesignSubscriptionPayload {
  mutation: MutationType!
  node: Design
  updatedFields: [String!]
  previousValues: DesignPreviousValues
}

input DesignSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DesignWhereInput
  AND: [DesignSubscriptionWhereInput!]
  OR: [DesignSubscriptionWhereInput!]
  NOT: [DesignSubscriptionWhereInput!]
}

input DesignUpdateInput {
  modified: Boolean
  author: UserUpdateOneRequiredWithoutDesignsInput
  deanery: String
  location: String
  parish: String
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  loads: LoadUpdateManyWithoutDesignInput
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignUpdateManyDataInput {
  modified: Boolean
  deanery: String
  location: String
  parish: String
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignUpdateManyMutationInput {
  modified: Boolean
  deanery: String
  location: String
  parish: String
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignUpdateManyWithoutAuthorInput {
  create: [DesignCreateWithoutAuthorInput!]
  delete: [DesignWhereUniqueInput!]
  connect: [DesignWhereUniqueInput!]
  set: [DesignWhereUniqueInput!]
  disconnect: [DesignWhereUniqueInput!]
  update: [DesignUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [DesignUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [DesignScalarWhereInput!]
  updateMany: [DesignUpdateManyWithWhereNestedInput!]
}

input DesignUpdateManyWithWhereNestedInput {
  where: DesignScalarWhereInput!
  data: DesignUpdateManyDataInput!
}

input DesignUpdateOneRequiredWithoutLoadsInput {
  create: DesignCreateWithoutLoadsInput
  update: DesignUpdateWithoutLoadsDataInput
  upsert: DesignUpsertWithoutLoadsInput
  connect: DesignWhereUniqueInput
}

input DesignUpdateWithoutAuthorDataInput {
  modified: Boolean
  deanery: String
  location: String
  parish: String
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  loads: LoadUpdateManyWithoutDesignInput
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignUpdateWithoutLoadsDataInput {
  modified: Boolean
  author: UserUpdateOneRequiredWithoutDesignsInput
  deanery: String
  location: String
  parish: String
  longitude: Float
  longitudeDir: String
  latitude: Float
  latitudeDir: String
  gridTied: String
  generator: String
  voltage: String
  freq: String
  phase: String
  area_roof: Int
  area_ground: Int
  dayLoad: Float
  nightLoad: Float
  fullLoad: Float
  param_autoHours: Float
  param_crit: Boolean
  param_loadPercent: Float
  param_condEff: Float
  param_maxDoD: Float
  param_maxPowerMarkdown: Float
  param_solarEff: Float
  param_surgeMarkup: Float
  battery: String
  charger: String
  inverter: String
  cost: Int
  output_pv: Float
}

input DesignUpdateWithWhereUniqueWithoutAuthorInput {
  where: DesignWhereUniqueInput!
  data: DesignUpdateWithoutAuthorDataInput!
}

input DesignUpsertWithoutLoadsInput {
  update: DesignUpdateWithoutLoadsDataInput!
  create: DesignCreateWithoutLoadsInput!
}

input DesignUpsertWithWhereUniqueWithoutAuthorInput {
  where: DesignWhereUniqueInput!
  update: DesignUpdateWithoutAuthorDataInput!
  create: DesignCreateWithoutAuthorInput!
}

input DesignWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  modified: Boolean
  modified_not: Boolean
  author: UserWhereInput
  deanery: String
  deanery_not: String
  deanery_in: [String!]
  deanery_not_in: [String!]
  deanery_lt: String
  deanery_lte: String
  deanery_gt: String
  deanery_gte: String
  deanery_contains: String
  deanery_not_contains: String
  deanery_starts_with: String
  deanery_not_starts_with: String
  deanery_ends_with: String
  deanery_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  parish: String
  parish_not: String
  parish_in: [String!]
  parish_not_in: [String!]
  parish_lt: String
  parish_lte: String
  parish_gt: String
  parish_gte: String
  parish_contains: String
  parish_not_contains: String
  parish_starts_with: String
  parish_not_starts_with: String
  parish_ends_with: String
  parish_not_ends_with: String
  longitude: Float
  longitude_not: Float
  longitude_in: [Float!]
  longitude_not_in: [Float!]
  longitude_lt: Float
  longitude_lte: Float
  longitude_gt: Float
  longitude_gte: Float
  longitudeDir: String
  longitudeDir_not: String
  longitudeDir_in: [String!]
  longitudeDir_not_in: [String!]
  longitudeDir_lt: String
  longitudeDir_lte: String
  longitudeDir_gt: String
  longitudeDir_gte: String
  longitudeDir_contains: String
  longitudeDir_not_contains: String
  longitudeDir_starts_with: String
  longitudeDir_not_starts_with: String
  longitudeDir_ends_with: String
  longitudeDir_not_ends_with: String
  latitude: Float
  latitude_not: Float
  latitude_in: [Float!]
  latitude_not_in: [Float!]
  latitude_lt: Float
  latitude_lte: Float
  latitude_gt: Float
  latitude_gte: Float
  latitudeDir: String
  latitudeDir_not: String
  latitudeDir_in: [String!]
  latitudeDir_not_in: [String!]
  latitudeDir_lt: String
  latitudeDir_lte: String
  latitudeDir_gt: String
  latitudeDir_gte: String
  latitudeDir_contains: String
  latitudeDir_not_contains: String
  latitudeDir_starts_with: String
  latitudeDir_not_starts_with: String
  latitudeDir_ends_with: String
  latitudeDir_not_ends_with: String
  gridTied: String
  gridTied_not: String
  gridTied_in: [String!]
  gridTied_not_in: [String!]
  gridTied_lt: String
  gridTied_lte: String
  gridTied_gt: String
  gridTied_gte: String
  gridTied_contains: String
  gridTied_not_contains: String
  gridTied_starts_with: String
  gridTied_not_starts_with: String
  gridTied_ends_with: String
  gridTied_not_ends_with: String
  generator: String
  generator_not: String
  generator_in: [String!]
  generator_not_in: [String!]
  generator_lt: String
  generator_lte: String
  generator_gt: String
  generator_gte: String
  generator_contains: String
  generator_not_contains: String
  generator_starts_with: String
  generator_not_starts_with: String
  generator_ends_with: String
  generator_not_ends_with: String
  voltage: String
  voltage_not: String
  voltage_in: [String!]
  voltage_not_in: [String!]
  voltage_lt: String
  voltage_lte: String
  voltage_gt: String
  voltage_gte: String
  voltage_contains: String
  voltage_not_contains: String
  voltage_starts_with: String
  voltage_not_starts_with: String
  voltage_ends_with: String
  voltage_not_ends_with: String
  freq: String
  freq_not: String
  freq_in: [String!]
  freq_not_in: [String!]
  freq_lt: String
  freq_lte: String
  freq_gt: String
  freq_gte: String
  freq_contains: String
  freq_not_contains: String
  freq_starts_with: String
  freq_not_starts_with: String
  freq_ends_with: String
  freq_not_ends_with: String
  phase: String
  phase_not: String
  phase_in: [String!]
  phase_not_in: [String!]
  phase_lt: String
  phase_lte: String
  phase_gt: String
  phase_gte: String
  phase_contains: String
  phase_not_contains: String
  phase_starts_with: String
  phase_not_starts_with: String
  phase_ends_with: String
  phase_not_ends_with: String
  area_roof: Int
  area_roof_not: Int
  area_roof_in: [Int!]
  area_roof_not_in: [Int!]
  area_roof_lt: Int
  area_roof_lte: Int
  area_roof_gt: Int
  area_roof_gte: Int
  area_ground: Int
  area_ground_not: Int
  area_ground_in: [Int!]
  area_ground_not_in: [Int!]
  area_ground_lt: Int
  area_ground_lte: Int
  area_ground_gt: Int
  area_ground_gte: Int
  loads_every: LoadWhereInput
  loads_some: LoadWhereInput
  loads_none: LoadWhereInput
  dayLoad: Float
  dayLoad_not: Float
  dayLoad_in: [Float!]
  dayLoad_not_in: [Float!]
  dayLoad_lt: Float
  dayLoad_lte: Float
  dayLoad_gt: Float
  dayLoad_gte: Float
  nightLoad: Float
  nightLoad_not: Float
  nightLoad_in: [Float!]
  nightLoad_not_in: [Float!]
  nightLoad_lt: Float
  nightLoad_lte: Float
  nightLoad_gt: Float
  nightLoad_gte: Float
  fullLoad: Float
  fullLoad_not: Float
  fullLoad_in: [Float!]
  fullLoad_not_in: [Float!]
  fullLoad_lt: Float
  fullLoad_lte: Float
  fullLoad_gt: Float
  fullLoad_gte: Float
  param_autoHours: Float
  param_autoHours_not: Float
  param_autoHours_in: [Float!]
  param_autoHours_not_in: [Float!]
  param_autoHours_lt: Float
  param_autoHours_lte: Float
  param_autoHours_gt: Float
  param_autoHours_gte: Float
  param_crit: Boolean
  param_crit_not: Boolean
  param_loadPercent: Float
  param_loadPercent_not: Float
  param_loadPercent_in: [Float!]
  param_loadPercent_not_in: [Float!]
  param_loadPercent_lt: Float
  param_loadPercent_lte: Float
  param_loadPercent_gt: Float
  param_loadPercent_gte: Float
  param_condEff: Float
  param_condEff_not: Float
  param_condEff_in: [Float!]
  param_condEff_not_in: [Float!]
  param_condEff_lt: Float
  param_condEff_lte: Float
  param_condEff_gt: Float
  param_condEff_gte: Float
  param_maxDoD: Float
  param_maxDoD_not: Float
  param_maxDoD_in: [Float!]
  param_maxDoD_not_in: [Float!]
  param_maxDoD_lt: Float
  param_maxDoD_lte: Float
  param_maxDoD_gt: Float
  param_maxDoD_gte: Float
  param_maxPowerMarkdown: Float
  param_maxPowerMarkdown_not: Float
  param_maxPowerMarkdown_in: [Float!]
  param_maxPowerMarkdown_not_in: [Float!]
  param_maxPowerMarkdown_lt: Float
  param_maxPowerMarkdown_lte: Float
  param_maxPowerMarkdown_gt: Float
  param_maxPowerMarkdown_gte: Float
  param_solarEff: Float
  param_solarEff_not: Float
  param_solarEff_in: [Float!]
  param_solarEff_not_in: [Float!]
  param_solarEff_lt: Float
  param_solarEff_lte: Float
  param_solarEff_gt: Float
  param_solarEff_gte: Float
  param_surgeMarkup: Float
  param_surgeMarkup_not: Float
  param_surgeMarkup_in: [Float!]
  param_surgeMarkup_not_in: [Float!]
  param_surgeMarkup_lt: Float
  param_surgeMarkup_lte: Float
  param_surgeMarkup_gt: Float
  param_surgeMarkup_gte: Float
  battery: String
  battery_not: String
  battery_in: [String!]
  battery_not_in: [String!]
  battery_lt: String
  battery_lte: String
  battery_gt: String
  battery_gte: String
  battery_contains: String
  battery_not_contains: String
  battery_starts_with: String
  battery_not_starts_with: String
  battery_ends_with: String
  battery_not_ends_with: String
  charger: String
  charger_not: String
  charger_in: [String!]
  charger_not_in: [String!]
  charger_lt: String
  charger_lte: String
  charger_gt: String
  charger_gte: String
  charger_contains: String
  charger_not_contains: String
  charger_starts_with: String
  charger_not_starts_with: String
  charger_ends_with: String
  charger_not_ends_with: String
  inverter: String
  inverter_not: String
  inverter_in: [String!]
  inverter_not_in: [String!]
  inverter_lt: String
  inverter_lte: String
  inverter_gt: String
  inverter_gte: String
  inverter_contains: String
  inverter_not_contains: String
  inverter_starts_with: String
  inverter_not_starts_with: String
  inverter_ends_with: String
  inverter_not_ends_with: String
  cost: Int
  cost_not: Int
  cost_in: [Int!]
  cost_not_in: [Int!]
  cost_lt: Int
  cost_lte: Int
  cost_gt: Int
  cost_gte: Int
  output_pv: Float
  output_pv_not: Float
  output_pv_in: [Float!]
  output_pv_not_in: [Float!]
  output_pv_lt: Float
  output_pv_lte: Float
  output_pv_gt: Float
  output_pv_gte: Float
  AND: [DesignWhereInput!]
  OR: [DesignWhereInput!]
  NOT: [DesignWhereInput!]
}

input DesignWhereUniqueInput {
  id: ID
}

type Load {
  id: ID!
  name: String
  quantity: Float!
  power: Float!
  dayUsage: Float!
  nightUsage: Float!
  usageDays: Float!
  surgeMult: Float!
  design: Design!
}

type LoadConnection {
  pageInfo: PageInfo!
  edges: [LoadEdge]!
  aggregate: AggregateLoad!
}

input LoadCreateInput {
  id: ID
  name: String
  quantity: Float!
  power: Float!
  dayUsage: Float!
  nightUsage: Float!
  usageDays: Float!
  surgeMult: Float!
  design: DesignCreateOneWithoutLoadsInput!
}

input LoadCreateManyWithoutDesignInput {
  create: [LoadCreateWithoutDesignInput!]
  connect: [LoadWhereUniqueInput!]
}

input LoadCreateWithoutDesignInput {
  id: ID
  name: String
  quantity: Float!
  power: Float!
  dayUsage: Float!
  nightUsage: Float!
  usageDays: Float!
  surgeMult: Float!
}

type LoadEdge {
  node: Load!
  cursor: String!
}

enum LoadOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  quantity_ASC
  quantity_DESC
  power_ASC
  power_DESC
  dayUsage_ASC
  dayUsage_DESC
  nightUsage_ASC
  nightUsage_DESC
  usageDays_ASC
  usageDays_DESC
  surgeMult_ASC
  surgeMult_DESC
}

type LoadPreviousValues {
  id: ID!
  name: String
  quantity: Float!
  power: Float!
  dayUsage: Float!
  nightUsage: Float!
  usageDays: Float!
  surgeMult: Float!
}

input LoadScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quantity: Float
  quantity_not: Float
  quantity_in: [Float!]
  quantity_not_in: [Float!]
  quantity_lt: Float
  quantity_lte: Float
  quantity_gt: Float
  quantity_gte: Float
  power: Float
  power_not: Float
  power_in: [Float!]
  power_not_in: [Float!]
  power_lt: Float
  power_lte: Float
  power_gt: Float
  power_gte: Float
  dayUsage: Float
  dayUsage_not: Float
  dayUsage_in: [Float!]
  dayUsage_not_in: [Float!]
  dayUsage_lt: Float
  dayUsage_lte: Float
  dayUsage_gt: Float
  dayUsage_gte: Float
  nightUsage: Float
  nightUsage_not: Float
  nightUsage_in: [Float!]
  nightUsage_not_in: [Float!]
  nightUsage_lt: Float
  nightUsage_lte: Float
  nightUsage_gt: Float
  nightUsage_gte: Float
  usageDays: Float
  usageDays_not: Float
  usageDays_in: [Float!]
  usageDays_not_in: [Float!]
  usageDays_lt: Float
  usageDays_lte: Float
  usageDays_gt: Float
  usageDays_gte: Float
  surgeMult: Float
  surgeMult_not: Float
  surgeMult_in: [Float!]
  surgeMult_not_in: [Float!]
  surgeMult_lt: Float
  surgeMult_lte: Float
  surgeMult_gt: Float
  surgeMult_gte: Float
  AND: [LoadScalarWhereInput!]
  OR: [LoadScalarWhereInput!]
  NOT: [LoadScalarWhereInput!]
}

type LoadSubscriptionPayload {
  mutation: MutationType!
  node: Load
  updatedFields: [String!]
  previousValues: LoadPreviousValues
}

input LoadSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: LoadWhereInput
  AND: [LoadSubscriptionWhereInput!]
  OR: [LoadSubscriptionWhereInput!]
  NOT: [LoadSubscriptionWhereInput!]
}

input LoadUpdateInput {
  name: String
  quantity: Float
  power: Float
  dayUsage: Float
  nightUsage: Float
  usageDays: Float
  surgeMult: Float
  design: DesignUpdateOneRequiredWithoutLoadsInput
}

input LoadUpdateManyDataInput {
  name: String
  quantity: Float
  power: Float
  dayUsage: Float
  nightUsage: Float
  usageDays: Float
  surgeMult: Float
}

input LoadUpdateManyMutationInput {
  name: String
  quantity: Float
  power: Float
  dayUsage: Float
  nightUsage: Float
  usageDays: Float
  surgeMult: Float
}

input LoadUpdateManyWithoutDesignInput {
  create: [LoadCreateWithoutDesignInput!]
  delete: [LoadWhereUniqueInput!]
  connect: [LoadWhereUniqueInput!]
  set: [LoadWhereUniqueInput!]
  disconnect: [LoadWhereUniqueInput!]
  update: [LoadUpdateWithWhereUniqueWithoutDesignInput!]
  upsert: [LoadUpsertWithWhereUniqueWithoutDesignInput!]
  deleteMany: [LoadScalarWhereInput!]
  updateMany: [LoadUpdateManyWithWhereNestedInput!]
}

input LoadUpdateManyWithWhereNestedInput {
  where: LoadScalarWhereInput!
  data: LoadUpdateManyDataInput!
}

input LoadUpdateWithoutDesignDataInput {
  name: String
  quantity: Float
  power: Float
  dayUsage: Float
  nightUsage: Float
  usageDays: Float
  surgeMult: Float
}

input LoadUpdateWithWhereUniqueWithoutDesignInput {
  where: LoadWhereUniqueInput!
  data: LoadUpdateWithoutDesignDataInput!
}

input LoadUpsertWithWhereUniqueWithoutDesignInput {
  where: LoadWhereUniqueInput!
  update: LoadUpdateWithoutDesignDataInput!
  create: LoadCreateWithoutDesignInput!
}

input LoadWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  quantity: Float
  quantity_not: Float
  quantity_in: [Float!]
  quantity_not_in: [Float!]
  quantity_lt: Float
  quantity_lte: Float
  quantity_gt: Float
  quantity_gte: Float
  power: Float
  power_not: Float
  power_in: [Float!]
  power_not_in: [Float!]
  power_lt: Float
  power_lte: Float
  power_gt: Float
  power_gte: Float
  dayUsage: Float
  dayUsage_not: Float
  dayUsage_in: [Float!]
  dayUsage_not_in: [Float!]
  dayUsage_lt: Float
  dayUsage_lte: Float
  dayUsage_gt: Float
  dayUsage_gte: Float
  nightUsage: Float
  nightUsage_not: Float
  nightUsage_in: [Float!]
  nightUsage_not_in: [Float!]
  nightUsage_lt: Float
  nightUsage_lte: Float
  nightUsage_gt: Float
  nightUsage_gte: Float
  usageDays: Float
  usageDays_not: Float
  usageDays_in: [Float!]
  usageDays_not_in: [Float!]
  usageDays_lt: Float
  usageDays_lte: Float
  usageDays_gt: Float
  usageDays_gte: Float
  surgeMult: Float
  surgeMult_not: Float
  surgeMult_in: [Float!]
  surgeMult_not_in: [Float!]
  surgeMult_lt: Float
  surgeMult_lte: Float
  surgeMult_gt: Float
  surgeMult_gte: Float
  design: DesignWhereInput
  AND: [LoadWhereInput!]
  OR: [LoadWhereInput!]
  NOT: [LoadWhereInput!]
}

input LoadWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createDesign(data: DesignCreateInput!): Design!
  updateDesign(data: DesignUpdateInput!, where: DesignWhereUniqueInput!): Design
  updateManyDesigns(data: DesignUpdateManyMutationInput!, where: DesignWhereInput): BatchPayload!
  upsertDesign(where: DesignWhereUniqueInput!, create: DesignCreateInput!, update: DesignUpdateInput!): Design!
  deleteDesign(where: DesignWhereUniqueInput!): Design
  deleteManyDesigns(where: DesignWhereInput): BatchPayload!
  createLoad(data: LoadCreateInput!): Load!
  updateLoad(data: LoadUpdateInput!, where: LoadWhereUniqueInput!): Load
  updateManyLoads(data: LoadUpdateManyMutationInput!, where: LoadWhereInput): BatchPayload!
  upsertLoad(where: LoadWhereUniqueInput!, create: LoadCreateInput!, update: LoadUpdateInput!): Load!
  deleteLoad(where: LoadWhereUniqueInput!): Load
  deleteManyLoads(where: LoadWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  DESIGNCREATE
  DESIGNUPDATE
  DESIGNDELETE
  PERMISSIONUPDATE
}

type Query {
  design(where: DesignWhereUniqueInput!): Design
  designs(where: DesignWhereInput, orderBy: DesignOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Design]!
  designsConnection(where: DesignWhereInput, orderBy: DesignOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DesignConnection!
  load(where: LoadWhereUniqueInput!): Load
  loads(where: LoadWhereInput, orderBy: LoadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Load]!
  loadsConnection(where: LoadWhereInput, orderBy: LoadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LoadConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  design(where: DesignSubscriptionWhereInput): DesignSubscriptionPayload
  load(where: LoadSubscriptionWhereInput): LoadSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  username: String!
  password: String!
  firstName: String!
  lastName: String
  admin: Boolean!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  designs(where: DesignWhereInput, orderBy: DesignOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Design!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  username: String!
  password: String!
  firstName: String!
  lastName: String
  admin: Boolean
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  designs: DesignCreateManyWithoutAuthorInput
}

input UserCreateOneWithoutDesignsInput {
  create: UserCreateWithoutDesignsInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutDesignsInput {
  id: ID
  username: String!
  password: String!
  firstName: String!
  lastName: String
  admin: Boolean
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  admin_ASC
  admin_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
}

type UserPreviousValues {
  id: ID!
  username: String!
  password: String!
  firstName: String!
  lastName: String
  admin: Boolean!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  username: String
  password: String
  firstName: String
  lastName: String
  admin: Boolean
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  designs: DesignUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  username: String
  password: String
  firstName: String
  lastName: String
  admin: Boolean
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneRequiredWithoutDesignsInput {
  create: UserCreateWithoutDesignsInput
  update: UserUpdateWithoutDesignsDataInput
  upsert: UserUpsertWithoutDesignsInput
  connect: UserWhereUniqueInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutDesignsDataInput {
  username: String
  password: String
  firstName: String
  lastName: String
  admin: Boolean
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpsertWithoutDesignsInput {
  update: UserUpdateWithoutDesignsDataInput!
  create: UserCreateWithoutDesignsInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  admin: Boolean
  admin_not: Boolean
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_not_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  designs_every: DesignWhereInput
  designs_some: DesignWhereInput
  designs_none: DesignWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  username: String
}
